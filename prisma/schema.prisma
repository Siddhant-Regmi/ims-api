generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrganizationType {
  Retail
  wholesale
}

enum DiscountType {
  rate
  amount
}

model Role {
  id   Int    @id @default(autoincrement())
  name String @unique

  users User[]

  @@map("roles")
}

model Organization {
  id         Int              @id @default(autoincrement())
  name       String           @unique
  type       OrganizationType @default(Retail)
  address    String?
  phone      String?          @db.VarChar(15)
  created_at DateTime         @default(now())
  updated_at DateTime         @updatedAt

  users User[]
  item_organizations ItemOrganization[]

  @@map("organizations")
}

model User {
  id              Int      @id @default(autoincrement())
  role_id         Int
  organization_id Int
  name            String
  email           String   @unique @db.VarChar(191)
  mobile          String   @unique @db.VarChar(15)
  password        String
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt

  role         Role         @relation(fields: [role_id], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  @@map("users")
}

model Item {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  organizations ItemOrganization[]

  @@map("items")
}

model ItemOrganization{
  item_id Int
  organization_id Int
  quantity Decimal @db.Decimal(15, 2) @default(0)

  item Item @relation(fields: [item_id], references: [id], onDelete: Cascade)
  organization Organization @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  @@id([item_id, organization_id])
  @@map("item_organizations")
}
